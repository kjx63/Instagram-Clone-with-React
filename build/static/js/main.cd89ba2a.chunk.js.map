{"version":3,"sources":["firebase.js","components/Post.js","components/ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","user","username","caption","imageUrl","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disbaled","onClick","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","image","setImage","progress","setProgress","setCaption","max","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","setUsername","email","setEmail","password","setPassword","setUser","onAuthStateChanged","authUser","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","catch","err","signInWithEmailAndPassword","signOut","key","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oVAaMA,EAXcC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,8CACZC,YAAa,qDACbC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,YACjBC,EAAOX,IAASW,OAChBC,EAAUZ,IAASY,UCsEVC,EA/EF,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EAC9BC,mBAAS,IADqB,mBACvDC,EADuD,KAC7CC,EAD6C,OAEhCF,mBAAS,IAFuB,mBAEvDG,EAFuD,KAE9CC,EAF8C,KAI9DC,qBAAU,WACR,IAAIC,EAYJ,OAXIX,IACFW,EAAc1B,EACX2B,WAAW,SACXC,IAAIb,GACJY,WAAW,YACXE,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXT,EAAYS,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,eAI1C,WACLR,OAED,CAACX,IAaJ,OACE,yBAAKoB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAACC,EAAA,EAAD,CACED,UAAU,eACVE,IAAI,aACJC,IAAI,gCAEN,4BAAKrB,IAGP,yBAAKkB,UAAU,cAAcG,IAAKnB,EAAUkB,IAAI,KAChD,wBAAIF,UAAU,cACZ,gCAASlB,GADX,IAC+BC,GAG/B,yBAAKiB,UAAU,kBACZd,EAASY,KAAI,SAACV,GAAD,OACZ,2BACE,gCAASA,EAAQN,UADnB,IACuCM,EAAQgB,UAIlDvB,GACC,0BAAMmB,UAAU,oBACd,2BACEA,UAAU,cACVK,KAAK,OACLC,YAAY,mBACZC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAWoB,EAAEC,OAAOH,UAEvC,4BACEP,UAAU,eACVW,UAAWvB,EACXiB,KAAK,SACLO,QA/CU,SAACH,GACnBA,EAAEI,iBAEFhD,EAAG2B,WAAW,SAASC,IAAIb,GAAQY,WAAW,YAAYsB,IAAI,CAC5DV,KAAMhB,EACNN,SAAUD,EAAKkC,YACfC,UAAWlD,IAASU,UAAUyC,WAAWC,oBAE3C7B,EAAW,MAmCL,W,gCCDK8B,G,MAhEK,SAAC,GAAkB,IAAhBrC,EAAe,EAAfA,SAAe,EACVG,mBAAS,IADC,mBAC7BmC,EAD6B,KACtBC,EADsB,OAEJpC,mBAAS,IAFL,mBAE7BqC,EAF6B,KAEnBC,EAFmB,OAGNtC,mBAAS,IAHH,mBAG7BF,EAH6B,KAGpByC,EAHoB,KAiDpC,OACE,yBAAKxB,UAAU,eACb,8BAAUA,UAAU,wBAAwBO,MAAOe,EAAUG,IAAI,QACjE,2BACEpB,KAAK,OACLC,YAAY,kBACZE,SAAU,SAACC,GAAD,OAAOe,EAAWf,EAAEC,OAAOH,QACrCA,MAAOxB,IAET,2BAAOsB,KAAK,OAAOG,SArDF,SAACC,GAChBA,EAAEC,OAAOgB,MAAM,IACjBL,EAASZ,EAAEC,OAAOgB,MAAM,OAoDxB,kBAACC,EAAA,EAAD,CAAQf,QAjDS,WACAlC,EAAQkD,IAAR,iBAAsBR,EAAMS,OAAQC,IAAIV,GAChDW,GACT,iBACA,SAACnC,GAEC,IAAM0B,EAAWU,KAAKC,MACnBrC,EAASsC,iBAAmBtC,EAASuC,WAAc,KAEtDZ,EAAYD,MAEd,SAACc,GAECC,QAAQC,IAAIF,GACZG,MAAMH,EAAMI,YAEd,WAEE9D,EACGkD,IAAI,UACJa,MAAMrB,EAAMS,MACZa,iBACAC,MAAK,SAACC,GAEL/E,EAAG2B,WAAW,SAASsB,IAAI,CACzBE,UAAWlD,IAASU,UAAUyC,WAAWC,kBACzCnC,QAASA,EACTC,SAAU4D,EACV9D,SAAUA,IAGZyC,EAAY,GACZC,EAAW,IACXH,EAAS,cAgBf,a,QCxDN,SAASwB,IAIP,MAAO,CACLC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJC,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OAIb,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,OAAQ,iBACRC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMW,QAAQ,EAAG,EAAG,QA4LlBC,MAxLf,WACE,IAAMC,EAAUf,IADH,EAEQhE,mBAAS4D,GAAvBoB,EAFM,sBAIahF,mBAAS,IAJtB,mBAINiF,EAJM,KAICC,EAJD,OAKWlF,oBAAS,GALpB,mBAKNmF,EALM,KAKAC,EALA,OAMuBpF,oBAAS,GANhC,mBAMNqF,EANM,KAMMC,EANN,OAOmBtF,mBAAS,IAP5B,mBAONH,EAPM,KAOI0F,EAPJ,OAQavF,mBAAS,IARtB,mBAQNwF,EARM,KAQCC,EARD,OASmBzF,mBAAS,IAT5B,mBASN0F,EATM,KASIC,EATJ,OAUW3F,mBAAS,MAVpB,mBAUNJ,EAVM,KAUAgG,EAVA,KAgEb,OApDAvF,qBAAU,WACR,IAAMC,EAAcd,EAAKqG,oBAAmB,SAACC,GACvCA,GAEF1C,QAAQC,IAAIyC,GACZF,EAAQE,IAGRF,EAAQ,SAIZ,OAAO,WAELtF,OAED,CAACV,EAAMC,IAEVQ,qBAAU,WACRzB,EAAG2B,WAAW,SACXE,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXuE,EACEvE,EAASC,KAAKC,KAAI,SAACL,GAAD,MAAU,CAAEuF,GAAIvF,EAAIuF,GAAIC,KAAMxF,EAAIM,iBAGzD,IA2BD,yBAAKC,UAAU,OACb,kBAACkF,EAAA,EAAD,CAAOd,KAAMA,EAAMe,QAAS,kBAAMd,GAAQ,KACxC,yBAAKe,MAAOnB,EAAYjE,UAAWgE,EAAQZ,OACzC,0BAAMpD,UAAU,eACd,gCACE,yBACEA,UAAU,mBACVG,IAAI,wFACJD,IAAI,yFAGR,kBAACmF,EAAA,EAAD,CACEhF,KAAK,OACLC,YAAY,WACZC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO+D,EAAY/D,EAAEC,OAAOH,UAExC,kBAAC8E,EAAA,EAAD,CACEhF,KAAK,QACLC,YAAY,QACZC,MAAOkE,EACPjE,SAAU,SAACC,GAAD,OAAOiE,EAASjE,EAAEC,OAAOH,UAErC,kBAAC8E,EAAA,EAAD,CACEhF,KAAK,WACLC,YAAY,WACZC,MAAOoE,EACPnE,SAAU,SAACC,GAAD,OAAOmE,EAAYnE,EAAEC,OAAOH,UAGxC,kBAACoB,EAAA,EAAD,CAAQtB,KAAK,SAASO,QAvDjB,SAACH,GACdA,EAAEI,iBAEFpC,EACG6G,+BAA+Bb,EAAOE,GACtChC,MAAK,SAACoC,GACL,OAAOA,EAASlG,KAAK0G,cAAc,CACjCxE,YAAajC,OAGhB0G,OAAM,SAACC,GAAD,OAASlD,MAAMkD,EAAIjD,YAE5B6B,GAAQ,KA2CA,cAON,kBAACa,EAAA,EAAD,CAAOd,KAAME,EAAYa,QAAS,kBAAMZ,GAAc,KACpD,yBAAKa,MAAOnB,EAAYjE,UAAWgE,EAAQZ,OACzC,0BAAMpD,UAAU,eACd,gCACE,yBACEA,UAAU,mBACVG,IAAI,wFACJD,IAAI,yFAGR,kBAACmF,EAAA,EAAD,CACEhF,KAAK,QACLC,YAAY,QACZC,MAAOkE,EACPjE,SAAU,SAACC,GAAD,OAAOiE,EAASjE,EAAEC,OAAOH,UAErC,kBAAC8E,EAAA,EAAD,CACEhF,KAAK,WACLC,YAAY,WACZC,MAAOoE,EACPnE,SAAU,SAACC,GAAD,OAAOmE,EAAYnE,EAAEC,OAAOH,UAGxC,kBAACoB,EAAA,EAAD,CAAQtB,KAAK,SAASO,QAtEjB,SAACH,GACdA,EAAEI,iBACFpC,EACGiH,2BAA2BjB,EAAOE,GAClCa,OAAM,SAACC,GAAD,OAASlD,MAAMkD,EAAIjD,YAE5B+B,GAAc,KAgEN,cAMN,yBAAKvE,UAAU,eACb,yBACEA,UAAU,mBACVG,IAAI,wFACJD,IAAI,wFAELrB,EACC,kBAAC8C,EAAA,EAAD,CAAQf,QAAS,kBAAMnC,EAAKkH,YAA5B,UAEA,yBAAK3F,UAAU,uBACb,kBAAC2B,EAAA,EAAD,CAAQf,QAAS,kBAAM2D,GAAc,KAArC,WACA,kBAAC5C,EAAA,EAAD,CAAQf,QAAS,kBAAMyD,GAAQ,KAA/B,aAIN,yBAAKrE,UAAU,cACb,yBAAKA,UAAU,kBACZkE,EAAMpE,KAAI,gBAAGmF,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OACT,kBAAC,EAAD,CACEY,IAAKZ,EACLpG,OAAQoG,EACRnG,KAAMA,EACNC,SAAUmG,EAAKnG,SACfC,QAASkG,EAAKlG,QACdC,SAAUiG,EAAKjG,eAIrB,yBAAKgB,UAAU,mBACb,kBAAC,IAAD,CACE4C,IAAI,uEACJiD,SAAU,IACVC,aAAa,EACbC,iBAAiB,MACjBC,SAAS,GACTC,cAAY,EACZC,UAAW,aACXC,UAAW,aACXC,cAAe,aACfC,UAAW,kBAKZ,OAAJxH,QAAI,IAAJA,OAAA,EAAAA,EAAMkC,aACL,kBAAC,EAAD,CAAajC,SAAUD,EAAKkC,cAE5B,mECrMYuF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvE,MAAK,SAAAwE,GACJA,EAAaC,gBAEd5B,OAAM,SAAApD,GACLC,QAAQD,MAAMA,EAAMI,c","file":"static/js/main.cd89ba2a.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyC3HJhSoLrYwWC4Vm_9U2ASbr8ut3vEl6A',\n  authDomain: 'instagram-clone-react-fdf69.firebaseapp.com',\n  databaseURL: 'https://instagram-clone-react-fdf69.firebaseio.com',\n  projectId: 'instagram-clone-react-fdf69',\n  storageBucket: 'instagram-clone-react-fdf69.appspot.com',\n  messagingSenderId: '838606146599',\n  appId: '1:838606146599:web:2d18c65d07fa828602d202',\n  measurementId: 'G-B15LHP6C87',\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from '../firebase';\nimport firebase from 'firebase';\n\nconst Post = ({ postId, user, username, caption, imageUrl }) => {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n\n  useEffect(() => {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = db\n        .collection('posts')\n        .doc(postId)\n        .collection('comments')\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = (e) => {\n    e.preventDefault();\n\n    db.collection('posts').doc(postId).collection('comments').add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setComment('');\n  };\n\n  return (\n    <div className='post'>\n      <div className='post__header'>\n        <Avatar\n          className='post__avatar'\n          alt='Remy Sharp'\n          src='/static/images/avatar/1.jpg'\n        />\n        <h3>{username}</h3>\n      </div>\n\n      <img className='post__image' src={imageUrl} alt='' />\n      <h4 className='post__text'>\n        <strong>{username}</strong> {caption}\n      </h4>\n\n      <div className='post__comments'>\n        {comments.map((comment) => (\n          <p>\n            <strong>{comment.username}</strong> {comment.text}\n          </p>\n        ))}\n      </div>\n      {user && (\n        <form className='post__commentBox'>\n          <input\n            className='post__input'\n            type='text'\n            placeholder='Add a comment...'\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          <button\n            className='post__button'\n            disbaled={!comment}\n            type='submit'\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { storage, db } from '../firebase';\nimport firebase from 'firebase';\nimport './ImageUpload.css';\n\nconst ImageUpload = ({ username }) => {\n  const [image, setImage] = useState('');\n  const [progress, setProgress] = useState('');\n  const [caption, setCaption] = useState('');\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        // progress function...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      (error) => {\n        // Error function ...\n        console.log(error);\n        alert(error.message);\n      },\n      () => {\n        // complete function ...\n        storage\n          .ref('images')\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            // post image inside db\n            db.collection('posts').add({\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              caption: caption,\n              imageUrl: url,\n              username: username,\n            });\n\n            setProgress(0);\n            setCaption('');\n            setImage(null);\n          });\n      }\n    );\n  };\n\n  return (\n    <div className='imageupload'>\n      <progress className='imageupload__progress' value={progress} max='100' />\n      <input\n        type='text'\n        placeholder='Enter a caption'\n        onChange={(e) => setCaption(e.target.value)}\n        value={caption}\n      />\n      <input type='file' onChange={handleChange} />\n      <Button onClick={handleUpload}>Upload</Button>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './components/Post';\nimport { db, auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Input, Modal } from '@material-ui/core';\nimport ImageUpload from './components/ImageUpload';\nimport InstagramEmbed from 'react-instagram-embed';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // user has logged in...\n        console.log(authUser);\n        setUser(authUser);\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n\n    return () => {\n      // perform some cleanup actions\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  useEffect(() => {\n    db.collection('posts')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => {\n        setPosts(\n          snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() }))\n        );\n      });\n  }, []);\n\n  const signUp = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((err) => alert(err.message));\n\n    setOpen(false);\n  };\n\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => alert(err.message));\n\n    setOpenSignIn(false);\n  };\n\n  return (\n    <div className='app'>\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app__signup'>\n            <center>\n              <img\n                className='app__headerImage'\n                src='https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png'\n                alt='https://www.extremetech.com/wp-content/uploads/2019/09/SubForester-764A6822edit.jpg'\n              />\n            </center>\n            <Input\n              type='text'\n              placeholder='username'\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              type='email'\n              placeholder='email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type='password'\n              placeholder='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button type='submit' onClick={signUp}>\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app__signup'>\n            <center>\n              <img\n                className='app__headerImage'\n                src='https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png'\n                alt='https://www.extremetech.com/wp-content/uploads/2019/09/SubForester-764A6822edit.jpg'\n              />\n            </center>\n            <Input\n              type='email'\n              placeholder='email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type='password'\n              placeholder='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button type='submit' onClick={signIn}>\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <div className='app__header'>\n        <img\n          className='app__headerImage'\n          src='https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png'\n          alt='https://www.extremetech.com/wp-content/uploads/2019/09/SubForester-764A6822edit.jpg'\n        />\n        {user ? (\n          <Button onClick={() => auth.signOut()}>Logout</Button>\n        ) : (\n          <div className='app__loginContainer'>\n            <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </div>\n        )}\n      </div>\n      <div className='app__posts'>\n        <div className='app__postsLeft'>\n          {posts.map(({ post, id }) => (\n            <Post\n              key={id}\n              postId={id}\n              user={user}\n              username={post.username}\n              caption={post.caption}\n              imageUrl={post.imageUrl}\n            />\n          ))}\n        </div>\n        <div className='app__postsRight'>\n          <InstagramEmbed\n            url='https://www.instagram.com/p/CEBTO6yHhJm/?utm_source=ig_web_copy_link'\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName='div'\n            protocol=''\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n        </div>\n      </div>\n\n      {user?.displayName ? (\n        <ImageUpload username={user.displayName} />\n      ) : (\n        <h3>Sorry you need to login to upload</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}